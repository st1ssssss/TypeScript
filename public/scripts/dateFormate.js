export const isoDateTransform = (date) => {
    const dateToTransform = new Date(date);
    const isoDate = dateToTransform.toISOString();
    const formatedDate = isoDate.substring(0, 10);
    return formatedDate;
};
export const dateFormate = (date) => {
    const c = new Date(isoDateTransform(date));
    const isoDate = isoDateTransform(date);
    const cc = new Date(Number(isoDate.substring(0, 4)), Number(isoDate.substring(6, 7)) + 1, 0);
    const ccISODate = cc.toISOString();
    const currentDate = isoDateTransform(c.setDate(c.getDate() + 1));
    const departureDate = isoDateTransform(c.setDate(c.getDate() + 3));
    const maxDate = ccISODate.substring(0, 10);
    return { currentDate, departureDate, maxDate };
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZUZvcm1hdGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvZGF0ZUZvcm1hdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQUcsQ0FBQyxJQUFZLEVBQUUsRUFBRTtJQUMvQyxNQUFNLGVBQWUsR0FBRyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQTtJQUN0QyxNQUFNLE9BQU8sR0FBRyxlQUFlLENBQUMsV0FBVyxFQUFFLENBQUE7SUFDN0MsTUFBTSxZQUFZLEdBQUcsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUE7SUFDN0MsT0FBTyxZQUFZLENBQUE7QUFDckIsQ0FBQyxDQUFBO0FBRUQsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFHLENBQUMsSUFBWSxFQUFFLEVBQUU7SUFDMUMsTUFBTSxDQUFDLEdBQUcsSUFBSSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQTtJQUMxQyxNQUFNLE9BQU8sR0FBRyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsQ0FBQTtJQUN0QyxNQUFNLEVBQUUsR0FBRyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxNQUFNLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUE7SUFDNUYsTUFBTSxTQUFTLEdBQUcsRUFBRSxDQUFDLFdBQVcsRUFBRSxDQUFBO0lBQ2xDLE1BQU0sV0FBVyxHQUFHLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLE9BQU8sRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUE7SUFDaEUsTUFBTSxhQUFhLEdBQUcsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsT0FBTyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQTtJQUNsRSxNQUFNLE9BQU8sR0FBRyxTQUFTLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQTtJQUMxQyxPQUFPLEVBQUUsV0FBVyxFQUFFLGFBQWEsRUFBRSxPQUFPLEVBQUUsQ0FBQTtBQUNoRCxDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgaXNvRGF0ZVRyYW5zZm9ybSA9IChkYXRlOiBudW1iZXIpID0+IHtcbiAgY29uc3QgZGF0ZVRvVHJhbnNmb3JtID0gbmV3IERhdGUoZGF0ZSlcbiAgY29uc3QgaXNvRGF0ZSA9IGRhdGVUb1RyYW5zZm9ybS50b0lTT1N0cmluZygpXG4gIGNvbnN0IGZvcm1hdGVkRGF0ZSA9IGlzb0RhdGUuc3Vic3RyaW5nKDAsIDEwKVxuICByZXR1cm4gZm9ybWF0ZWREYXRlXG59XG5cbmV4cG9ydCBjb25zdCBkYXRlRm9ybWF0ZSA9IChkYXRlOiBudW1iZXIpID0+IHtcbiAgY29uc3QgYyA9IG5ldyBEYXRlKGlzb0RhdGVUcmFuc2Zvcm0oZGF0ZSkpXG4gIGNvbnN0IGlzb0RhdGUgPSBpc29EYXRlVHJhbnNmb3JtKGRhdGUpXG4gIGNvbnN0IGNjID0gbmV3IERhdGUoTnVtYmVyKGlzb0RhdGUuc3Vic3RyaW5nKDAsIDQpKSwgTnVtYmVyKGlzb0RhdGUuc3Vic3RyaW5nKDYsIDcpKSArIDEsIDApXG4gIGNvbnN0IGNjSVNPRGF0ZSA9IGNjLnRvSVNPU3RyaW5nKClcbiAgY29uc3QgY3VycmVudERhdGUgPSBpc29EYXRlVHJhbnNmb3JtKGMuc2V0RGF0ZShjLmdldERhdGUoKSArIDEpKVxuICBjb25zdCBkZXBhcnR1cmVEYXRlID0gaXNvRGF0ZVRyYW5zZm9ybShjLnNldERhdGUoYy5nZXREYXRlKCkgKyAzKSlcbiAgY29uc3QgbWF4RGF0ZSA9IGNjSVNPRGF0ZS5zdWJzdHJpbmcoMCwgMTApXG4gIHJldHVybiB7IGN1cnJlbnREYXRlLCBkZXBhcnR1cmVEYXRlLCBtYXhEYXRlIH1cbn1cbiJdfQ==